{
  "layout": "Column",
  "rdbmsId": "e2e0a910-c77c-4b07-88ea-a75fa1a058ff",
  "hidden": false,
  "engine": "State_Locations",
  "insightName": "Bar",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"State_Locations\"}\u003c/encode\u003e\" ) ;CreateFrame ( GRID ) .as ( [ \u0027FRAME217450\u0027 ] ) ;Database ( State_Locations ) | Select ( State_1 , State_1__Latitude , State_1__Longitude ) .as ( [ State_1 , Latitude , Longitude ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Latitude , Longitude , State_1 ) .as ( [ Latitude , Longitude , State_1 ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Latitude\" , \"Longitude\" , \"State_1\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Latitude ) ) , ( Select ( Latitude , Average ( Longitude ) ) .as ( [ Latitude , AverageofLongitude ] ) | Group ( Latitude ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Latitude\" ] , \"value\" : [ \"AverageofLongitude\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Latitude , Longitude ) .as ( [ Latitude , Longitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Latitude\" ] , \"value\" : [ \"Longitude\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( State_1 ) ) , ( Select ( State_1 , Average ( Latitude ) ) .as ( [ State_1 , AverageofLatitude ] ) | Group ( State_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"State_1\" ] , \"value\" : [ \"AverageofLatitude\" ] } } } ) | Collect ( 500 ) ) , ( Select ( State_1 , Latitude ) .as ( [ State_1 , Latitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"State_1\" ] , \"value\" : [ \"Latitude\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( State_1 ) ) , ( Select ( State_1 , Average ( Latitude ) ) .as ( [ State_1 , AverageofLatitude ] ) | Group ( State_1 ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"State_1\" ] , \"value\" : [ \"AverageofLatitude\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( State_1 , Latitude ) .as ( [ State_1 , Latitude ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"State_1\" ] , \"value\" : [ \"Latitude\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}